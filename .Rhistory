sv = alpha > .self$TOL # tolerance
sv_x = X[sv, ]
sv_y = y[sv]
wx = K * (alpha * y)
print(y*(1 - wxstar - b_star))
print(wx)
temp = t(y * (1 - wxstar - b_star))
wx = -wx + rbind(temp, temp, temp)
print(wx)
if(length(sv[sv == TRUE]) == 0 ) # no alpha > tol
{
lb = max(wx[y == 1])
ub = min(wx[y == -1])
b = (lb + ub) / 2
}
else
b = mean(wx[sv])
print(b)
.self$Support_vectors = sv_x
.self$Support_y = sv_y
.self$Dual_coef = alpha[sv]
.self$Intercept = b
print(.self$Dual_coef)
},
project = function(X)
{
print("project function")
if(is.null(X))
stop("passed NULL X")
if (.self$Kernel_x == "linear")
{
kernel_method = linear_kernel
kernel_param = NULL
}
else if (.self$Kernel_x == "poly")
{
kernel_method = poly_kernel
kernel_param = .self$Degree_x
}
else
{
kernel_method = rbf_kernel
kernel_param = .self$Gamma_x
}
y_predict = matrix(0, nrow(X))
for (i in 1:nrow(X))
{
s = 0
for (j in 1:length(.self$Dual_coef))
{
a = .self$Dual_coef[j]
sv_y = .self$Support_y[j]
sv = .self$Support_vectors[j, ]
s = s + a * sv_y * kernel_method(X[i, ], sv, kernel_param)
}
y_predict[i] = s
}
print(y_predict)
return(y_predict)
},
predict = function(X)
{
if(is.null(X))
stop("passed NULL X")
print("predict function")
return(sign(.self$project(X) + .self$Intercept))
},
decision_function = function(X)
{
if(is.null(X))
stop("passed NULL X")
print("decision function")
return(.self$project(X) + .self$Intercept)
}
)
)
#source("R/QPSvmPlus.R")
qp = QPSvmPlus$new(cost = 1, gamma = 1,
kernel_x = "linear", degree_x = 3, gamma_x = .01,
kernel_xstar = "linear", degree_xstar = 3, gamma_xstar = .01,
tol = .00001)
qp$fit(X, X, y)
A = c(3,1,1,2,5,4,4,5,3,5,3,2,3,4,3,3,4,3,2,3)
barplot(A, "X", "Frequency")
barplot(A, xlab = "X", ylab = "Frequency")
F = c(2, 3, 8, 4, 3)
barplot(F, xlab = "X", ylab = "Frequency")
hist(F)
hist(F, breaks=1, col="blue")
hist(F, breaks=1, col="purple")
barplot(F, xlab = "X", ylab = "pink")
barplot(F, xlab = "X", ylab = "yello")
barplot(F, xlab = "X", ylab = "yellow")
barplot(F, xlab = "X", ylab = "Frequency", col = "pink")
hist(F, breaks=1, col="purple")
library(CVXR)
library(quadprog)
Dmat       <- matrix(0,3,3)
diag(Dmat) <- 1
dvec       <- c(0,5,0)
Amat       <- matrix(c(-4,-3,0,2,1,0,0,-2,1),3,3)
bvec       <- c(-8,2,0)
solve.QP(Dmat,dvec,Amat,bvec=bvec)
#min( âˆ’ q^T x + 1 / 2 x^T P x ) with the constraints  aMatrix^T x > = bVec
P = 2* rbind(c(1.0, 0.),c(0., 4.))
q = c(-8.0, -16.)
aMatrix = rbind(c(-1.0, 1., -1., 0.),
c(1., 0., 0., -1.))
bVec = c(5.0, 3., 0., 0.)
sol = solve.QP(P, -q, Amat = -aMatrix, bvec = -bVec)
print(sol)
#source("R/QPSvmPlus.R")
qp = QPSvmPlus$new(cost = 1, gamma = 1,
kernel_x = "linear", degree_x = 3, gamma_x = .01,
kernel_xstar = "linear", degree_xstar = 3, gamma_xstar = .01,
tol = .00001)
#X = 2*diag(3)
#X_test = 3*diag(3)
X1 = rbind(c(3,1), c(3,-1), c(6,1), c(6,-1))
X2 = rbind(c(1,0), c(0,1), c(0,-1), c(-1,0))
X = rbind(X1,X2)
y = c(1,1,1,1,-1,-1,-1,-1)
qp$fit(X, X, y)
qp$predict(X_test)
source("R/QPSvmPlus.R")
qp = QPSvmPlus$new(cost = 1, gamma = 1,
kernel_x = "linear", degree_x = 3, gamma_x = .01,
kernel_xstar = "linear", degree_xstar = 3, gamma_xstar = .01,
tol = .00001)
X1 = rbind(c(3,1), c(3,-1), c(6,1), c(6,-1))
X2 = rbind(c(1,0), c(0,1), c(0,-1), c(-1,0))
X = rbind(X1,X2)
y = c(1,1,1,1,-1,-1,-1,-1)
qp$fit(X, X, y)
qp$predict(X_test)
eye = diag(8)
qp$fit(X, eye, y)
source("R/QPSvmPlus.R")
qp = QPSvmPlus$new(cost = 1, gamma = 1,
kernel_x = "linear", degree_x = 3, gamma_x = .01,
kernel_xstar = "linear", degree_xstar = 3, gamma_xstar = .01,
tol = .00001)
#X = 2*diag(3)
#X_test = 3*diag(3)
#X1 = rbind(c(3,1), c(3,-1), c(6,1), c(6,-1))
#X2 = rbind(c(1,0), c(0,1), c(0,-1), c(-1,0))
#X = rbind(X1,X2)
#y = c(1,1,1,1,-1,-1,-1,-1)
X_train = rbind(c(17, 24,  1,  8, 15),
c(23,  5,  7, 14, 16),
c(4,  6, 13, 20, 22),
c(10, 12, 19, 21,  3),
c(11, 18, 25,  2,  9))
y_train = c(1, 1, -1, 1, -1)
XStar = diag(5)
XStar(0,0) = 1
XStar(1, 1) = 2
XStar(2, 2) = 3
XStar(3, 3) = 4
XStar(4, 4) = 5
qp$fit(X_train, XStar, y)
#qp$predict(X_test)
XStar = diag(5)
XStar(0,0) = 1
XStar = diag(5)
XStar[0,0] = 1
XStar[1, 1] = 2
XStar[2, 2] = 3
XStar[3, 3] = 4
XStar[4, 4] = 5
source("R/QPSvmPlus.R")
qp = QPSvmPlus$new(cost = 1, gamma = 1,
kernel_x = "linear", degree_x = 3, gamma_x = .01,
kernel_xstar = "linear", degree_xstar = 3, gamma_xstar = .01,
tol = .00001)
#X = 2*diag(3)
#X_test = 3*diag(3)
#X1 = rbind(c(3,1), c(3,-1), c(6,1), c(6,-1))
#X2 = rbind(c(1,0), c(0,1), c(0,-1), c(-1,0))
#X = rbind(X1,X2)
#y = c(1,1,1,1,-1,-1,-1,-1)
X_train = rbind(c(17, 24,  1,  8, 15),
c(23,  5,  7, 14, 16),
c(4,  6, 13, 20, 22),
c(10, 12, 19, 21,  3),
c(11, 18, 25,  2,  9))
y_train = c(1, 1, -1, 1, -1)
XStar = diag(5)
XStar[0,0] = 1
XStar[1, 1] = 2
XStar[2, 2] = 3
XStar[3, 3] = 4
XStar[4, 4] = 5
eye = diag(8)
qp$fit(X_train, XStar, y)
qp$predict(X_test)
qp$fit(X_train, XStar, y_train)
source("R/QPSvmPlus.R")
qp = QPSvmPlus$new(cost = 1, gamma = 1,
kernel_x = "linear", degree_x = 3, gamma_x = .01,
kernel_xstar = "linear", degree_xstar = 3, gamma_xstar = .01,
tol = .00001)
#X = 2*diag(3)
#X_test = 3*diag(3)
#X1 = rbind(c(3,1), c(3,-1), c(6,1), c(6,-1))
#X2 = rbind(c(1,0), c(0,1), c(0,-1), c(-1,0))
#X = rbind(X1,X2)
#y = c(1,1,1,1,-1,-1,-1,-1)
X_train = rbind(c(17, 24,  1,  8, 15),
c(23,  5,  7, 14, 16),
c(4,  6, 13, 20, 22),
c(10, 12, 19, 21,  3),
c(11, 18, 25,  2,  9))
y_train = c(1, 1, -1, 1, -1)
XStar = diag(5)
XStar[0,0] = 1
XStar[1, 1] = 2
XStar[2, 2] = 3
XStar[3, 3] = 4
XStar[4, 4] = 5
eye = diag(8)
qp$fit(X_train, XStar, y_train)
qp$predict(X_test)
source("R/QPSvmPlus.R")
qp = QPSvmPlus$new(cost = 1, gamma = 1,
kernel_x = "linear", degree_x = 3, gamma_x = .01,
kernel_xstar = "linear", degree_xstar = 3, gamma_xstar = .01,
tol = .00001)
#X = 2*diag(3)
#X_test = 3*diag(3)
#X1 = rbind(c(3,1), c(3,-1), c(6,1), c(6,-1))
#X2 = rbind(c(1,0), c(0,1), c(0,-1), c(-1,0))
#X = rbind(X1,X2)
#y = c(1,1,1,1,-1,-1,-1,-1)
X_train = rbind(c(17, 24,  1,  8, 15),
c(23,  5,  7, 14, 16),
c(4,  6, 13, 20, 22),
c(10, 12, 19, 21,  3),
c(11, 18, 25,  2,  9))
y_train = c(1, 1, -1, 1, -1)
XStar = diag(5)
XStar[0,0] = 1
XStar[1, 1] = 2
XStar[2, 2] = 3
XStar[3, 3] = 4
XStar[4, 4] = 5
eye = diag(8)
qp$fit(X_train, XStar, y_train)
#qp$predict(X_test)
source("R/QPSvmPlus.R")
qp = QPSvmPlus$new(cost = 1, gamma = 1,
kernel_x = "linear", degree_x = 3, gamma_x = .01,
kernel_xstar = "linear", degree_xstar = 3, gamma_xstar = .01,
tol = .00001)
#X = 2*diag(3)
#X_test = 3*diag(3)
#X1 = rbind(c(3,1), c(3,-1), c(6,1), c(6,-1))
#X2 = rbind(c(1,0), c(0,1), c(0,-1), c(-1,0))
#X = rbind(X1,X2)
#y = c(1,1,1,1,-1,-1,-1,-1)
X_train = rbind(c(17, 24,  1,  8, 15),
c(23,  5,  7, 14, 16),
c(4,  6, 13, 20, 22),
c(10, 12, 19, 21,  3),
c(11, 18, 25,  2,  9))
y_train = c(1, 1, -1, 1, -1)
XStar = diag(5)
XStar[0,0] = 1
XStar[1, 1] = 2
XStar[2, 2] = 3
XStar[3, 3] = 4
XStar[4, 4] = 5
eye = diag(8)
qp$fit(X_train, XStar, y_train)
#qp$predict(X_test)
source("R/QPSvmPlus.R")
qp = QPSvmPlus$new(cost = 1, gamma = 1,
kernel_x = "rbf", degree_x = 3, gamma_x = .01,
kernel_xstar = "rbf", degree_xstar = 3, gamma_xstar = .01,
tol = .00001)
#X = 2*diag(3)
#X_test = 3*diag(3)
#X1 = rbind(c(3,1), c(3,-1), c(6,1), c(6,-1))
#X2 = rbind(c(1,0), c(0,1), c(0,-1), c(-1,0))
#X = rbind(X1,X2)
#y = c(1,1,1,1,-1,-1,-1,-1)
X_train = rbind(c(17, 24,  1,  8, 15),
c(23,  5,  7, 14, 16),
c(4,  6, 13, 20, 22),
c(10, 12, 19, 21,  3),
c(11, 18, 25,  2,  9))
y_train = c(1, 1, -1, 1, -1)
XStar = diag(5)
XStar[0,0] = 1
XStar[1, 1] = 2
XStar[2, 2] = 3
XStar[3, 3] = 4
XStar[4, 4] = 5
eye = diag(8)
qp$fit(X_train, XStar, y_train)
#qp$predict(X_test)
source("R/QPSvmPlus.R")
qp = QPSvmPlus$new(cost = 1, gamma = 1,
kernel_x = "rbf", degree_x = 3, gamma_x = .01,
kernel_xstar = "rbf", degree_xstar = 3, gamma_xstar = .01,
tol = .00001)
#X = 2*diag(3)
#X_test = 3*diag(3)
#X1 = rbind(c(3,1), c(3,-1), c(6,1), c(6,-1))
#X2 = rbind(c(1,0), c(0,1), c(0,-1), c(-1,0))
#X = rbind(X1,X2)
#y = c(1,1,1,1,-1,-1,-1,-1)
X_train = rbind(c(17, 24,  1,  8, 15),
c(23,  5,  7, 14, 16),
c(4,  6, 13, 20, 22),
c(10, 12, 19, 21,  3),
c(11, 18, 25,  2,  9))
y_train = c(1, 1, -1, 1, -1)
XStar = diag(5)
XStar[0,0] = 1
XStar[1, 1] = 2
XStar[2, 2] = 3
XStar[3, 3] = 4
XStar[4, 4] = 5
eye = diag(8)
qp$fit(X_train, XStar, y_train)
#qp$predict(X_test)
source("R/QPSvmPlus.R")
qp = QPSvmPlus$new(cost = 1, gamma = 1,
kernel_x = "rbf", degree_x = 3, gamma_x = .0019,
kernel_xstar = "rbf", degree_xstar = 3, gamma_xstar = .0568,
tol = .00001)
#X = 2*diag(3)
#X_test = 3*diag(3)
#X1 = rbind(c(3,1), c(3,-1), c(6,1), c(6,-1))
#X2 = rbind(c(1,0), c(0,1), c(0,-1), c(-1,0))
#X = rbind(X1,X2)
#y = c(1,1,1,1,-1,-1,-1,-1)
X_train = rbind(c(17, 24,  1,  8, 15),
c(23,  5,  7, 14, 16),
c(4,  6, 13, 20, 22),
c(10, 12, 19, 21,  3),
c(11, 18, 25,  2,  9))
y_train = c(1, 1, -1, 1, -1)
XStar = diag(5)
XStar[0,0] = 1
XStar[1, 1] = 2
XStar[2, 2] = 3
XStar[3, 3] = 4
XStar[4, 4] = 5
eye = diag(8)
qp$fit(X_train, XStar, y_train)
#qp$predict(X_test)
source("R/QPSvmPlus.R")
qp = QPSvmPlus$new(cost = 1, gamma = 1,
kernel_x = "rbf", degree_x = 3, gamma_x = .0019,
kernel_xstar = "rbf", degree_xstar = 3, gamma_xstar = .0568,
tol = .00001)
#X = 2*diag(3)
#X_test = 3*diag(3)
#X1 = rbind(c(3,1), c(3,-1), c(6,1), c(6,-1))
#X2 = rbind(c(1,0), c(0,1), c(0,-1), c(-1,0))
#X = rbind(X1,X2)
#y = c(1,1,1,1,-1,-1,-1,-1)
X_train = rbind(c(17, 24,  1,  8, 15),
c(23,  5,  7, 14, 16),
c(4,  6, 13, 20, 22),
c(10, 12, 19, 21,  3),
c(11, 18, 25,  2,  9))
y_train = c(1, 1, -1, 1, -1)
XStar = diag(5)
XStar[0,0] = 1
XStar[1, 1] = 2
XStar[2, 2] = 3
XStar[3, 3] = 4
XStar[4, 4] = 5
eye = diag(8)
qp$fit(X_train, XStar, y_train)
#qp$predict(X_test)
print(XStar)
source("R/QPSvmPlus.R")
qp = QPSvmPlus$new(cost = 1, gamma = 1,
kernel_x = "rbf", degree_x = 3, gamma_x = .0019,
kernel_xstar = "rbf", degree_xstar = 3, gamma_xstar = .0568,
tol = .00001)
#X = 2*diag(3)
#X_test = 3*diag(3)
#X1 = rbind(c(3,1), c(3,-1), c(6,1), c(6,-1))
#X2 = rbind(c(1,0), c(0,1), c(0,-1), c(-1,0))
#X = rbind(X1,X2)
#y = c(1,1,1,1,-1,-1,-1,-1)
X_train = rbind(c(17, 24,  1,  8, 15),
c(23,  5,  7, 14, 16),
c(4,  6, 13, 20, 22),
c(10, 12, 19, 21,  3),
c(11, 18, 25,  2,  9))
y_train = c(1, 1, -1, 1, -1)
XStar = diag(5)
XStar[1, 1] = 1
XStar[2, 2] = 2
XStar[3, 3] = 3
XStar[4, 4] = 4
XStar[5,5] = 5
print(XStar)
eye = diag(8)
qp$fit(X_train, XStar, y_train)
#qp$predict(X_test)
source("R/QPSvmPlus.R")
qp = QPSvmPlus$new(cost = 1, gamma = 1,
kernel_x = "rbf", degree_x = 3, gamma_x = .0019,
kernel_xstar = "rbf", degree_xstar = 3, gamma_xstar = .0568,
tol = .00001)
#X = 2*diag(3)
#X_test = 3*diag(3)
#X1 = rbind(c(3,1), c(3,-1), c(6,1), c(6,-1))
#X2 = rbind(c(1,0), c(0,1), c(0,-1), c(-1,0))
#X = rbind(X1,X2)
#y = c(1,1,1,1,-1,-1,-1,-1)
X_train = rbind(c(17, 24,  1,  8, 15),
c(23,  5,  7, 14, 16),
c(4,  6, 13, 20, 22),
c(10, 12, 19, 21,  3),
c(11, 18, 25,  2,  9))
y_train = c(1, 1, -1, 1, -1)
XStar = diag(5)
XStar[1, 1] = 1
XStar[2, 2] = 2
XStar[3, 3] = 3
XStar[4, 4] = 4
XStar[5,5] = 5
print(XStar)
eye = diag(8)
qp$fit(X_train, XStar, y_train)
#qp$predict(X_test)
source("R/QPSvmPlus.R")
qp = QPSvmPlus$new(cost = 1, gamma = 1,
kernel_x = "rbf", degree_x = 3, gamma_x = .0019,
kernel_xstar = "rbf", degree_xstar = 3, gamma_xstar = .0568,
tol = .00001)
#X = 2*diag(3)
#X_test = 3*diag(3)
#X1 = rbind(c(3,1), c(3,-1), c(6,1), c(6,-1))
#X2 = rbind(c(1,0), c(0,1), c(0,-1), c(-1,0))
#X = rbind(X1,X2)
#y = c(1,1,1,1,-1,-1,-1,-1)
X_train = rbind(c(17, 24,  1,  8, 15),
c(23,  5,  7, 14, 16),
c(4,  6, 13, 20, 22),
c(10, 12, 19, 21,  3),
c(11, 18, 25,  2,  9))
y_train = c(1, 1, -1, 1, -1)
XStar = diag(5)
XStar[1, 1] = 1
XStar[2, 2] = 2
XStar[3, 3] = 3
XStar[4, 4] = 4
XStar[5,5] = 5
print(XStar)
qp$fit(X_train, XStar, y_train)
#qp$predict(X_test)
source("R/QPSvmPlus.R")
qp = QPSvmPlus$new(cost = 1, gamma = 1,
kernel_x = "rbf", degree_x = 3, gamma_x = .0019,
kernel_xstar = "rbf", degree_xstar = 3, gamma_xstar = .0568,
tol = .00001)
#X = 2*diag(3)
#X_test = 3*diag(3)
#X1 = rbind(c(3,1), c(3,-1), c(6,1), c(6,-1))
#X2 = rbind(c(1,0), c(0,1), c(0,-1), c(-1,0))
#X = rbind(X1,X2)
#y = c(1,1,1,1,-1,-1,-1,-1)
X_train = rbind(c(17, 24,  1,  8, 15),
c(23,  5,  7, 14, 16),
c(4,  6, 13, 20, 22),
c(10, 12, 19, 21,  3),
c(11, 18, 25,  2,  9))
y_train = c(1, 1, -1, 1, -1)
XStar = diag(5)
XStar[1, 1] = 1
XStar[2, 2] = 2
XStar[3, 3] = 3
XStar[4, 4] = 4
XStar[5,5] = 5
print(XStar)
qp$fit(X_train, XStar, y_train)
#qp$predict(X_test)
source("R/QPSvmPlus.R")
qp = QPSvmPlus$new(cost = 1, gamma = 1,
kernel_x = "rbf", degree_x = 3, gamma_x = .0019,
kernel_xstar = "rbf", degree_xstar = 3, gamma_xstar = .0568,
tol = .00001)
#X = 2*diag(3)
#X_test = 3*diag(3)
#X1 = rbind(c(3,1), c(3,-1), c(6,1), c(6,-1))
#X2 = rbind(c(1,0), c(0,1), c(0,-1), c(-1,0))
#X = rbind(X1,X2)
#y = c(1,1,1,1,-1,-1,-1,-1)
X_train = rbind(c(17, 24,  1,  8, 15),
c(23,  5,  7, 14, 16),
c(4,  6, 13, 20, 22),
c(10, 12, 19, 21,  3),
c(11, 18, 25,  2,  9))
y_train = c(1, 1, -1, 1, -1)
XStar = diag(5)
XStar[1, 1] = 1
XStar[2, 2] = 2
XStar[3, 3] = 3
XStar[4, 4] = 4
XStar[5,5] = 5
print(XStar)
qp$fit(X_train, XStar, y_train)
#qp$predict(X_test)
